apply plugin: 'com.android.library'

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //lambda表达式用
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api 'io.reactivex.rxjava2:rxandroid:2.1.0'

    api 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    api('com.squareup.retrofit2:retrofit:2.4.0') {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    api 'com.alibaba:fastjson:1.1.71.android'
    implementation 'com.google.code.gson:gson:2.8.5'

}

def SDK_BASENAME = "HttpEnginer";
def SDK_VERSION = "_V0.0.7";

task makeJar(type : Copy){
    //刪除存在的
    delete 'build/libs/test.jar'
    //设置拷贝的文件
    from('build/intermediates/packaged-classes/release/')
    //打进jar包后的文件目录
    into('build/libs/')
    //将classes.jar放入build/libs/目录下
    //include，exclude参数来设置过滤
    //我们只关心classes.jar这个文件
    include('classes.jar')
    //重命名
    rename('classes.jar',SDK_BASENAME + SDK_VERSION+'.jar')
}
makeJar.dependsOn(build)


